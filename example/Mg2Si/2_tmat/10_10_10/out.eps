%!PS-Adobe-2.0 EPSF-2.0
%%Title: out.eps
%%Creator: gnuplot 5.2 patchlevel 4
%%CreationDate: Thu Jun 28 10:14:05 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 226
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 226 lineto 50 226 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (out.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 4)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jun 28 10:14:05 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5040.00 3528.00 BoxColFill} if
/Helvetic reencodeISO def
1.000 UL
LTb
LCb setrgbcolor
1587 720 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 720 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.14)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
1.000 UL
LTb
LCb setrgbcolor
1587 932 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 932 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.12)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 1143 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 1143 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.1)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 1355 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 1355 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.08)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 1566 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 1566 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.06)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 1778 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 1778 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.04)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 1989 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 1989 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.02)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 2201 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 2201 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 2412 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 2412 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.02)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 2624 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 2624 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.04)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 2835 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 2835 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.06)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 3047 M
63 0 V
2522 0 R
-63 0 V
stroke
1486 3047 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.08)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1587 720 M
0 63 V
0 2264 R
0 -63 V
stroke
1587 552 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.5)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2018 720 M
0 63 V
0 2264 R
0 -63 V
stroke
2018 552 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2449 720 M
0 63 V
0 2264 R
0 -63 V
stroke
2449 552 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1.5)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2880 720 M
0 63 V
0 2264 R
0 -63 V
stroke
2880 552 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3310 720 M
0 63 V
0 2264 R
0 -63 V
stroke
3310 552 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2.5)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3741 720 M
0 63 V
0 2264 R
0 -63 V
stroke
3741 552 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 3)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4172 720 M
0 63 V
0 2264 R
0 -63 V
stroke
4172 552 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 3.5)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1587 3047 N
0 -2327 V
2585 0 V
0 2327 V
-2585 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
771 1883 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true 0 (Scattering rate \(ps\))]
] -80.0 MCshow
grestore
/Helvetica findfont 240 scalefont setfont
LTb
LCb setrgbcolor
2879 264 M
[ [(Helvetica) 240.0 0.0 true true 0 (Frequency \(THz\))]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
LTb
% Begin plot #1
0.500 UP
3.000 UL
LTb
[3.0 dl1 1.5 dl2 ] 0 setdash
0.07 0.53 0.90 C 1939 2167 Box
1939 2246 Box
2027 2145 Box
3535 2121 Box
3540 2084 Box
3540 2217 Box
3613 2075 Box
3613 2164 Box
3626 2529 Box
2275 2303 Box
2389 2276 Box
2535 1823 Box
3498 2125 Box
3515 2186 Box
3515 2169 Box
3630 1471 Box
3642 2028 Box
3705 2525 Box
2555 2073 Box
2626 2202 Box
2920 2073 Box
3438 2175 Box
3463 2126 Box
3477 2144 Box
3639 1643 Box
3652 2322 Box
3790 2169 Box
2658 2064 Box
2691 2198 Box
3222 2242 Box
3376 2111 Box
3412 2125 Box
3432 2277 Box
3610 1963 Box
3614 2506 Box
3811 2135 Box
2683 2353 Box
2685 1847 Box
3290 2127 Box
3378 2132 Box
3389 2329 Box
3495 2141 Box
3565 2414 Box
3571 2070 Box
3761 2193 Box
2680 1868 Box
2688 2158 Box
3269 2049 Box
3369 2142 Box
3374 2213 Box
3546 2154 Box
3553 2183 Box
3621 2423 Box
3695 2152 Box
2348 2441 Box
2367 1777 Box
2736 2174 Box
3483 1993 Box
3494 2027 Box
3496 2449 Box
3637 2044 Box
3639 1778 Box
3762 2037 Box
2531 2106 Box
2598 2343 Box
2974 1925 Box
3419 1992 Box
3451 2439 Box
3466 2107 Box
3639 888 Box
3652 1979 Box
3837 2154 Box
2663 2132 Box
2755 2157 Box
3176 2329 Box
3344 2173 Box
3397 2253 Box
3426 2270 Box
3623 1243 Box
3639 2225 Box
3851 2136 Box
2742 2261 Box
2801 2168 Box
3250 2098 Box
3349 1950 Box
3375 2253 Box
3418 2342 Box
3593 2136 Box
3614 2279 Box
3806 2129 Box
2790 2285 Box
2813 2358 Box
3221 2038 Box
3322 2091 Box
3353 2037 Box
3528 2051 Box
3573 2347 Box
3656 2225 Box
3717 2385 Box
2777 2064 Box
2799 2308 Box
3242 2215 Box
3329 2101 Box
3377 2049 Box
3483 2292 Box
3583 2496 Box
3602 2249 Box
3779 1954 Box
2712 2176 Box
2772 2129 Box
3236 2152 Box
3334 2329 Box
3371 2116 Box
3434 2334 Box
3614 2006 Box
3622 2331 Box
3832 1671 Box
2593 2329 Box
2695 2269 Box
3014 1759 Box
3397 2337 Box
3431 2277 Box
3473 2217 Box
3633 1885 Box
3656 1835 Box
3829 1843 Box
2597 2220 Box
2612 1475 Box
3132 2187 Box
3363 2093 Box
3415 2034 Box
3416 2114 Box
3638 1972 Box
3639 1443 Box
3907 2049 Box
2695 2051 Box
2734 2029 Box
3238 2164 Box
3278 2124 Box
3358 2133 Box
3371 2216 Box
3619 1360 Box
3634 2063 Box
3915 2163 Box
2799 2245 Box
2868 2086 Box
3186 1852 Box
3303 2004 Box
3317 2120 Box
3369 2444 Box
3600 2362 Box
3642 1922 Box
3859 2054 Box
2907 2485 Box
2929 2519 Box
3144 1988 Box
3258 2014 Box
3317 1939 Box
3493 2021 Box
3590 2464 Box
3673 2145 Box
3774 2175 Box
2905 2591 Box
2952 2723 Box
3168 2156 Box
3241 1990 Box
3354 1760 Box
3519 2426 Box
3592 2167 Box
3645 2164 Box
3776 2220 Box
2839 2435 Box
2889 2404 Box
3235 2390 Box
3285 2075 Box
3372 2341 Box
3414 2129 Box
3608 2078 Box
3622 2099 Box
3828 1820 Box
2730 2492 Box
2793 2408 Box
3206 1917 Box
3319 2299 Box
3360 2319 Box
3446 2263 Box
3622 1926 Box
3633 1595 Box
3845 1807 Box
2721 2239 Box
2732 1892 Box
3195 2040 Box
3283 1944 Box
3290 2292 Box
3302 2197 Box
3599 2175 Box
3603 1816 Box
3938 2035 Box
2808 2521 Box
2829 1966 Box
3110 1848 Box
3215 2260 Box
3216 1582 Box
3342 2251 Box
3582 2056 Box
3603 1967 Box
3898 2091 Box
2943 2215 Box
2962 2321 Box
3066 2141 Box
3176 1877 Box
3223 1962 Box
3464 2060 Box
3580 2183 Box
3632 1841 Box
3820 2075 Box
2943 2146 Box
3066 2953 Box
3103 2146 Box
3152 2327 Box
3310 1790 Box
3576 1998 Box
3591 2109 Box
3630 2247 Box
3776 2018 Box
2910 2356 Box
3004 2702 Box
3161 2278 Box
3212 2475 Box
3363 1743 Box
3515 2311 Box
3598 2098 Box
3633 2078 Box
3798 2022 Box
2787 2352 Box
2798 2796 Box
3040 2077 Box
3104 1165 Box
3109 2365 Box
3284 2467 Box
3565 2204 Box
3569 2241 Box
3906 1990 Box
2915 1679 Box
2942 2234 Box
2999 1833 Box
3041 2412 Box
3053 1477 Box
3353 2234 Box
3562 1922 Box
3575 2155 Box
3870 2096 Box
2960 1799 Box
3030 1776 Box
3053 2269 Box
3106 2559 Box
3195 2105 Box
3500 2148 Box
3575 1820 Box
3609 2146 Box
3809 1938 Box
2673 2031 Box
2744 2311 Box
3151 2124 Box
3340 1928 Box
3390 2201 Box
3436 2208 Box
3627 1501 Box
3648 2078 Box
3864 2125 Box
2793 2028 Box
2845 2039 Box
3250 1855 Box
3309 2479 Box
3323 1887 Box
3400 2158 Box
3618 2237 Box
3636 2202 Box
3847 2093 Box
2879 2096 Box
2924 2069 Box
3180 1908 Box
3270 1828 Box
3353 1965 Box
3476 2065 Box
3608 2372 Box
3637 2254 Box
3792 2180 Box
2917 2249 Box
2933 2451 Box
3155 1943 Box
3259 2069 Box
3328 1815 Box
3520 2014 Box
3599 2338 Box
3685 1943 Box
3740 2327 Box
2808 1908 Box
2848 2403 Box
3187 1873 Box
3296 1776 Box
3308 2487 Box
3352 2028 Box
3603 1939 Box
3640 2131 Box
3876 2197 Box
2911 2002 Box
2978 2212 Box
3112 1869 Box
3241 1721 Box
3294 1981 Box
3458 2058 Box
3610 2433 Box
3660 1971 Box
3809 2181 Box
2960 2200 Box
3037 2677 Box
3110 2088 Box
3201 2135 Box
3314 1779 Box
3555 1907 Box
3621 2242 Box
3690 2059 Box
3739 2255 Box
2930 2210 Box
3034 2817 Box
3114 2120 Box
3222 2274 Box
3327 1838 Box
3514 2199 Box
3627 2248 Box
3658 2200 Box
3779 2309 Box
2934 2131 Box
2965 2251 Box
3051 2016 Box
3166 1811 Box
3187 1897 Box
3440 2163 Box
3581 1861 Box
3621 2169 Box
3834 2194 Box
2977 1825 Box
3043 2437 Box
3083 2645 Box
3158 1821 Box
3242 2218 Box
3561 2094 Box
3606 1957 Box
3642 2274 Box
3764 2037 Box
2963 2102 Box
3062 2254 Box
3123 2686 Box
3165 2565 Box
3314 2103 Box
3592 2385 Box
3626 2156 Box
3664 2291 Box
3740 2196 Box
2963 1797 Box
3060 2346 Box
3102 2021 Box
3191 2084 Box
3310 2168 Box
3565 2321 Box
3631 1950 Box
3682 2325 Box
3739 2340 Box
2975 2076 Box
3047 2295 Box
3131 2334 Box
3166 2389 Box
3306 2274 Box
3613 1951 Box
3632 2429 Box
3678 2103 Box
3714 2501 Box
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1587 3047 N
0 -2327 V
2585 0 V
0 2327 V
-2585 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetic Helvetica
